<?xml version="1.0" encoding="utf-8"?>
<schema name="example" version="1.5">
  <fields>
	<field name="productname_s" type="productnamemanualsynonyms" indexed="true" stored="true"/>
    <field name="productcode_t" type="productcodemanualsynonyms" indexed="true" stored="true"/>
    <field name="productcategory_sm" type="productcategorymanualsynonyms" indexed="true" stored="true"/>
    <field name="_content" type="text_general" indexed="true" stored="false" />
    <field name="_database" type="string" indexed="true" stored="true" />
    <field name="_path" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="_uniqueid" type="string" indexed="true" stored="true" required="true" />
    <field name="_datasource" type="string" indexed="true" stored="true" required="true" />
    <field name="_parent" type="string" indexed="true" stored="true" />
    <field name="_name" type="text_general" indexed="true" stored="true" />
    <field name="_displayname" type="text_general" indexed="true" stored="true" />
    <field name="_language" type="string" indexed="true" stored="true" />
    <field name="_creator" type="lowercase" indexed="true" stored="true" />
    <field name="_editor" type="lowercase" indexed="true" stored="true" />
    <field name="_created" type="tdate" indexed="true" stored="true" />
    <field name="_updated" type="tdate" indexed="true" stored="true" />
    <field name="_hidden" type="boolean" indexed="true" stored="false" />
    <field name="_template" type="lowercase" indexed="true" stored="true" />
    <field name="_templatename" type="string" indexed="true" stored="true" />
    <field name="_templates" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="_icon" type="string" indexed="true" stored="true" />
    <field name="_links" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="_tags" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="_group" type="string" indexed="true" stored="true" />
    <field name="_indexname" type="string" indexed="true" stored="true" />
    <field name="_latestversion" type="boolean" indexed="true" stored="true" />
    <field name="_indextimestamp" type="tdate" indexed="true" stored="true" default="NOW" />
    <field name="_fullpath" type="lowercase" indexed="true" stored="true" />
    <field name="_isclone" type="boolean" indexed="true" stored="true" />
    <field name="_version" type="string" indexed="true" stored="true" />
    <field name="_hash" type="string" indexed="true" stored="true" />
    <field name="__semantics" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="__bucketable" type="boolean" indexed="true" stored="false" />
    <field name="__workflow_state" type="string" indexed="true" stored="false" />
    <field name="__is_bucket" type="boolean" indexed="true" stored="false" />
    <field name="lock" type="boolean" indexed="true" stored="false" />
    <field name="is_displayed_in_search_results" type="boolean" indexed="true" stored="false" />
    <field name="text" type="text_general" indexed="true" stored="false" multiValued="true" />
    <field name="text_rev" type="text_general_rev" indexed="true" stored="false" multiValued="true" />
    <field name="alphaNameSort" type="alphaOnlySort" indexed="true" stored="false" />
    <field name="__hidden" type="boolean" indexed="true" stored="false" />
    <field name="_version_" type="long" indexed="true" stored="true" />
    <dynamicField name="*_t" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_en" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_i" type="int" indexed="true" stored="true" />
    <dynamicField name="*_s" type="string" indexed="true" stored="true" />
    <dynamicField name="*_sm" type="string" indexed="true" stored="true" multiValued="true" />
    <dynamicField name="*_im" type="int" indexed="true" stored="true" multiValued="true" />
    <dynamicField name="*_b" type="boolean" indexed="true" stored="true" />
    <dynamicField name="*_dt" type="date" indexed="true" stored="true" />
    <dynamicField name="*_p" type="location" indexed="true" stored="true" />
    <dynamicField name="*_ti" type="tint" indexed="true" stored="true" />
    <dynamicField name="*_tl" type="tlong" indexed="true" stored="true" />
    <dynamicField name="*_tf" type="tfloat" indexed="true" stored="true" />
    <dynamicField name="*_td" type="tdouble" indexed="true" stored="true" />
    <dynamicField name="*_tdt" type="tdate" indexed="true" stored="true" />
    <dynamicField name="*_tdtm" type="tdate" indexed="true" stored="true" multiValued="true" />
    <dynamicField name="*_pi" type="tint" indexed="true" stored="true" />
    <dynamicField name="*_c" type="currency" indexed="true" stored="true" />
    <dynamicField name="*_ignored" type="ignored" indexed="true" stored="true" />
    <dynamicField name="*_random" type="random" indexed="true" stored="true" />

    <dynamicField name="*_t_bg" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_ca" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_cz" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_da" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_de" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_el" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_es" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_eu" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_fa" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_fi" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_fr" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_ga" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_gl" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_hi" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_hu" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_hy" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_id" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_it" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_ja" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_lv" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_nl" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_no" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_pt" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_ro" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_ru" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_sv" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_th" type="text_general" indexed="true" stored="true" />
    <dynamicField name="*_t_tr" type="text_general" indexed="true" stored="true" />
  </fields>
  <uniqueKey>_uniqueid</uniqueKey>
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" />
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0" />
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0" />
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0" />
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0" />
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0" />
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0" />
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0" />
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0" />

    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0" />
    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0" />
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldType name="binary" class="solr.BinaryField" />
    <!-- The "RandomSortField" is not used to store or search any
         data.  You can declare fields of this type it in your schema
         to generate pseudo-random orderings of your docs for sorting 
         or function purposes.  The ordering is generated based on the field
         name and the version of the index. As long as the index version
         remains unchanged, and the same field name is reused,
         the ordering of the docs will be consistent.  
         If you want different psuedo-random orderings of documents,
         for the same version of the index, use a dynamicField and
         change the field name in the request.
     -->
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />
    <!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.

         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.

         For more info on customizing your analyzer chain, please see
         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
     -->
    <!-- One can also specify an existing Analyzer class that has a
         default constructor via the class attribute on the analyzer element.
         Example:
    <fieldType name="text_greek" class="solr.TextField">
      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
    </fieldType>
    -->
    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
      </analyzer>
    </fieldType>
    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <!-- <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" /> -->
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- A text field with defaults appropriate for English: it
         tokenizes with StandardTokenizer, removes English stop words
         (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
         finally applies Porter's stemming.  The query time analyzer
         also applies synonyms from synonyms.txt. -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
        -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.EnglishPossessiveFilterFactory" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	-->
        <filter class="solr.PorterStemFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.EnglishPossessiveFilterFactory" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	-->
        <filter class="solr.PorterStemFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- A text field with defaults appropriate for English, plus
	 aggressive word-splitting and autophrase features enabled.
	 This field is just like text_en, except it adds
	 WordDelimiterFilter to enable splitting and matching of
	 words on case-change, alpha numeric boundaries, and
	 non-alphanumeric chars.  This means certain compound word
	 cases will work, for example query "wi fi" will match
	 document "WiFi" or "wi-fi".
        -->
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
        -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.PorterStemFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.PorterStemFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
    <fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.EnglishMinimalStemFilterFactory" />
        <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
             possible with WordDelimiterFilter in conjuncton with stemming. -->
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- Just like text_general except it reverses the characters of
	 each token, to enable more efficient leading wildcard queries. -->
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true" maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory" />
        <!-- <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" /> -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      -->
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->
        <filter class="solr.LowerCaseFilterFactory" />
        <!-- The TrimFilter removes any leading or trailing whitespace -->
        <filter class="solr.TrimFilterFactory" />
        <!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string, 
             which may include back references to portions of the original
             string matched by the pattern.
             
             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.
             
             http://docs.oracle.com/javase/7/docs/api/java/util/regex/package-summary.html
          -->
        <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all" />
      </analyzer>
    </fieldType>
    <!-- lowercases the entire field value, keeping it as a single token.  -->
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>
    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  -->
    <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
    <!-- This point type indexes the coordinates as separate fields (subFields)
      If subFieldType is defined, it references a type, and a dynamic field
      definition is created matching *___<typename>.  Alternately, if 
      subFieldSuffix is defined, that is used to create the subFields.
      Example: if subFieldType="double", then the coordinates would be
        indexed in fields myloc_0___double,myloc_1___double.
      Example: if subFieldSuffix="_d" then the coordinates would be indexed
        in fields myloc_0_d,myloc_1_d
      The subFields are an implementation detail of the fieldType, and end
      users normally should not need to know about them.
     -->
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d" />
    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate" />
    <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
      For more information about this and other Spatial fields new to Solr 4, see:
      http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
    -->
    <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType" geo="true" distErrPct="0.025" maxDistErr="0.001" distanceUnits="kilometers" />
    <fieldType name="bbox" class="solr.BBoxField" geo="true" distanceUnits="kilometers" numberType="_bbox_coord" />
    <fieldType name="_bbox_coord" class="solr.TrieDoubleField" precisionStep="8" docValues="true" stored="false" />
    <fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD" currencyConfig="currency.xml" />
    <fieldType name="pint" class="solr.TrieIntField" />

  <!-- (1) For productname_s -->
  <fieldType name="productnamemanualsynonyms" class="solr.TextField" positionIncrementGap="500" sortMissingLast="true">
		<analyzer>
		  <tokenizer class="solr.StandardTokenizerFactory"/>
		  <filter class="solr.TrimFilterFactory"/>
		  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms-productname.txt" tokenizerFactory="solr.StandardTokenizerFactory"/>
		  <filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
	</fieldType>

  <!-- (2) For productcode_t -->
  <fieldType name="productcodemanualsynonyms" class="solr.TextField" positionIncrementGap="500" sortMissingLast="true">
		<analyzer>
		  <tokenizer class="solr.StandardTokenizerFactory"/>
		  <filter class="solr.TrimFilterFactory"/>
		  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms-productcode.txt" tokenizerFactory="solr.StandardTokenizerFactory"/>
		  <filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
	</fieldType>

  <!-- (3) For productcategory_sm -->
  <fieldType name="productcategorymanualsynonyms" class="solr.TextField" positionIncrementGap="500" sortMissingLast="true">
		<analyzer>
		  <tokenizer class="solr.StandardTokenizerFactory"/>
		  <filter class="solr.TrimFilterFactory"/>
		  <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms-area-of-study.txt" tokenizerFactory="solr.StandardTokenizerFactory"/>
		  <filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
	</fieldType>	
	
  </types>
</schema>



